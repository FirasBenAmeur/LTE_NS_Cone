################################################################################
## 
## This COOLFluiD CFcase file tests: 
## 
## Finite Volume, NavierStokes2D (equilibrium for air5), NewtonIterator, 
## mesh with quads, second-order reconstruction with limiter, AUSM+ flux, 
## noslip wall BC, PETSc, Mutation F77 (version 2.0.0)
##
#################################################################################
##
## This testcases simulates an axisymmetric cone in Mach 6.29 U_inf=4244m/s), an 
## isothermal wall at 293K, a freestream temperature of 1192K and a pressure of 
## 6880Pa. It is to be used for stability computations
## 
### Residual = 1.9855189

#######TEST CONFIGURATION
CFEnv.ExceptionLogLevel    = 1000
CFEnv.ExceptionDumps       = true
CFEnv.ExceptionOutputs     = true
#

# Simulation Modules
Simulator.Modules.Libs = libShapeFunctions libCFmeshFileWriter libCFmeshFileReader libTecplotWriter libNavierStokes libLTE libNEQ libFiniteVolume libNewtonMethod libFiniteVolumeNavierStokes libFiniteVolumeNEQ libGambit2CFmesh libTecplot2CFmesh libPetscI libMutation2OLD libMutation2OLDI libAeroCoefFVM libAeroCoefFVMNEQ

# relative paths to directories
Simulator.Paths.WorkingDir = ./
Simulator.Paths.ResultsDir = ./RESULTS_LTE

# interactive settings details (filename and reading rate)
Simulator.SubSystem.InteractiveParamReader.FileName = ./LTE_NS_Cone.inter
Simulator.SubSystem.InteractiveParamReader.readRate = 10

# Physical model
Simulator.SubSystem.Default.PhysicalModelType = NavierStokes2D

# Reference quantities (for LTE the variables are [p u v T])
# they have to be kept >= the free stream values
Simulator.SubSystem.NavierStokes2D.refValues = 6880 4244 4244 1192
Simulator.SubSystem.NavierStokes2D.PropertyLibrary = Mutation2OLD
# Amri : Mutation -> Mutation2OLD
Simulator.SubSystem.NavierStokes2D.Mutation2OLD.mixtureName = air5
Simulator.SubSystem.NavierStokes2D.Mutation2OLD.dynViscAlgo = CG
Simulator.SubSystem.NavierStokes2D.Mutation2OLD.thermCondAlgo = Direct

# OUTPUT SETTINGS: TECPLOT and CFmesh file (CF format used for restarting)  
Simulator.SubSystem.OutputFormat      = Tecplot CFmesh

Simulator.SubSystem.CFmesh.FileName   = LTE_NS_Cone_Output.CFmesh
Simulator.SubSystem.CFmesh.SaveRate   = 250
Simulator.SubSystem.CFmesh.AppendIter = true  # to the CFmesh files

Simulator.SubSystem.Tecplot.FileName              = LTE_NS_Cone_Output.plt
Simulator.SubSystem.Tecplot.Data.outputVar        = PuvtLTE
Simulator.SubSystem.Tecplot.Data.printExtraValues = true
Simulator.SubSystem.Tecplot.Data.SurfaceTRS       = wall symmetry inlet outlet
Simulator.SubSystem.Tecplot.SaveRate              = 100
Simulator.SubSystem.Tecplot.AppendIter = true  # to the tecplot files
Simulator.SubSystem.Tecplot.Data.DataHandleOutput.CCSocketNames = uX uY
Simulator.SubSystem.Tecplot.Data.DataHandleOutput.CCVariableNames =  px ux vx Tx py uy vy Ty
Simulator.SubSystem.Tecplot.Data.DataHandleOutput.CCBlockSize = 1 1
Simulator.SubSystem.Tecplot.WriteSol = ParWriteSolutionBlock

# stop the simulation after a certain number of iterations
#Simulator.SubSystem.StopCondition = MaxNumberSteps
#Simulator.SubSystem.MaxNumberSteps.nbSteps = 20

# stop the simulation when a certain residual norm is reached
Simulator.SubSystem.StopCondition  = Norm
Simulator.SubSystem.Norm.valueNorm = -3.0

# name of the boundary patches in the mesh file (must be consistent)
Simulator.SubSystem.Default.listTRS = wall symmetry inlet outlet

Simulator.SubSystem.MeshCreator = CFmeshFileReader
Simulator.SubSystem.CFmeshFileReader.Data.FileName = ./restart.CFmesh 

# Converting from Tecplot to CFmesh
# file.plt and file.surf.plt must be both present
#Simulator.SubSystem.CFmeshFileReader.convertFrom = Tecplot2CFmesh
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.Discontinuous = true
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.SolutionOrder = P0
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.HasBlockFormat = false
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.SurfaceTRS = wall symmetry outlet inlet   # name of the boundaries in CFDPP.surf.plt
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.ReadVariables = "p" "u" "v" "T"     # name of the variables  in  your CFDPP.plt
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.NbElementTypes = 1
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.SkipSolution = true  # we test just the mesh 
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.Precision = 12
#Simulator.SubSystem.CFmeshFileReader.Tecplot2CFmesh.HasAllSurfFile = true

# uncomment the following if restarting from a new GAMBIT file
#Simulator.SubSystem.CFmeshFileReader.convertFrom = Gambit2CFmesh
#Simulator.SubSystem.CFmeshFileReader.Gambit2CFmesh.Discontinuous = true
#Simulator.SubSystem.CFmeshFileReader.Gambit2CFmesh.SolutionOrder = P0
#Scaling factor: to be used ONLY if Restart=false (WATCH OUT: the code divides by this number)
#The scaling factor is the number by which the mesh is REDUCED (divided)
#Simulator.SubSystem.CFmeshFileReader.Data.ScalingFactor = 1 

# activate this to restart
Simulator.SubSystem.CellCenterFVM.Restart = true

# setting for PETSC linear system solver	
Simulator.SubSystem.LinearSystemSolver = PETSC
Simulator.SubSystem.LSSNames = NewtonIteratorLSS
# preconditioner types: PCILU for serial, PCASM for serial/parallel
Simulator.SubSystem.NewtonIteratorLSS.Data.PCType = PCASM
Simulator.SubSystem.NewtonIteratorLSS.Data.MaxIter = 1000
Simulator.SubSystem.NewtonIteratorLSS.Data.RelativeTolerance = 1e-4

# implicit time integrator for steady calculations
Simulator.SubSystem.ConvergenceMethod = NewtonIterator
Simulator.SubSystem.NewtonIterator.Data.MaxSteps = 1

# the CFL can be changed interactively in ./LTE_NS_Cone.inter
Simulator.SubSystem.NewtonIterator.Data.CFL.ComputeCFL = Interactive
#Simulator.SubSystem.NewtonIterator.Data.CFL.ComputeCFL = Function
#Simulator.SubSystem.NewtonIterator.Data.CFL.Function.Def = \
#	if(i<670,5.,if(i<1200,9.,if(i<1440,17.,if(i<1840,33.,if(i<2420,55,if(i<2700,100.,if(i<2870,200.,if(i<2940,500.,1000.))))))))

# underelaxation parameter (usually it can be kept equal to 1)
Simulator.SubSystem.NewtonIterator.StdUpdateSol.Relaxation = 1.
# monitored residual variable for convergence (pressure)
Simulator.SubSystem.NewtonIterator.Data.L2.MonitoredVarID = 0
Simulator.SubSystem.NewtonIterator.Data.FilterState = Max # ??? ONLY CNEq ???
Simulator.SubSystem.NewtonIterator.Data.Max.maskIDs = 1 0 0 1 # ??? ONLY CNEq ???
Simulator.SubSystem.NewtonIterator.Data.Max.minValues = 0. 0. 0. 0. # ??? ONLY CNEq ???

Simulator.SubSystem.SpaceMethod = CellCenterFVM
Simulator.SubSystem.CellCenterFVM.ComputeRHS = NumJacobFast
Simulator.SubSystem.CellCenterFVM.NumJacobFast.FreezeDiffCoeff = true
Simulator.SubSystem.CellCenterFVM.ComputeTimeRHS = PseudoSteadyTimeRhs

#AUSM flux splitter
Simulator.SubSystem.CellCenterFVM.Data.FluxSplitter = AUSMPlus2D
# AL: try also .choiceA12 = 2 or 3 to see if it improves convergence
Simulator.SubSystem.CellCenterFVM.Data.AUSMPlus2D.choiceA12 = 1

#Axisymmetric switch
Simulator.SubSystem.CellCenterFVM.Data.isAxisymm = true
Simulator.SubSystem.CellCenterFVM.Data.SourceTerm = NavierStokes2DAxiST
#

# useful variables (not to  be changed)
Simulator.SubSystem.CellCenterFVM.Data.UpdateVar = PuvtLTE
Simulator.SubSystem.CellCenterFVM.Data.SolutionVar = Cons
Simulator.SubSystem.CellCenterFVM.Data.DiffusiveVar = PuvtLTE
Simulator.SubSystem.CellCenterFVM.Data.DiffusiveFlux = NavierStokes
Simulator.SubSystem.CellCenterFVM.Data.DerivativeStrategy = Corrected2D

#Second order settings
Simulator.SubSystem.CellCenterFVM.SetupCom = LeastSquareP1Setup
Simulator.SubSystem.CellCenterFVM.SetupNames = Setup1
Simulator.SubSystem.CellCenterFVM.Setup1.stencil = FaceVertexPlusGhost
Simulator.SubSystem.CellCenterFVM.UnSetupCom = LeastSquareP1UnSetup
Simulator.SubSystem.CellCenterFVM.UnSetupNames = UnSetup1

Simulator.SubSystem.CellCenterFVM.Data.PolyRec = LinearLS2D
# second order can be activated by setting gradientFactor to 1. in IXV.inter 
Simulator.SubSystem.CellCenterFVM.Data.LinearLS2D.gradientFactor = 0.
Simulator.SubSystem.CellCenterFVM.Data.LinearLS2D.limitRes = -4.0
Simulator.SubSystem.CellCenterFVM.Data.Limiter = Venktn2D
Simulator.SubSystem.CellCenterFVM.Data.Venktn2D.coeffEps = 1.0
Simulator.SubSystem.CellCenterFVM.Data.Venktn2D.useFullStencil = true
Simulator.SubSystem.CellCenterFVM.Data.Venktn2D.length = 1.0
#Simulator.SubSystem.CellCenterFVM.Data.LinearLS2D.Vars = i
#Simulator.SubSystem.CellCenterFVM.Data.LinearLS2D.Def =  \
#               if(i<10000,0.,1.) \
#				if(i<10000,0.,1.) \
#				if(i<10000,0.,1.) \
#				if(i<10000,0.,1.)

#### only activate if you are restarting from a 2nd order solution #########

Simulator.SubSystem.CFmeshFileReader.Data.ExtraStateVarNames = InitLimiter
Simulator.SubSystem.CFmeshFileReader.Data.ExtraStateVarTags = limiter
Simulator.SubSystem.CFmeshFileReader.Data.ExtraStateVarStrides = 4
Simulator.SubSystem.CellCenterFVM.Setup1.InitLimiterSocket = InitLimiter
##########################################################################
### field for extra state-related variables
## this saves the limiter as extra variables allowing to restart from the latest saved values 
## only useful if "freezing" of limiter has been already activated (LinearLS3D.limitRes > 8.0)
Simulator.SubSystem.CFmesh.Data.ExtraStateVarNames = limiter
Simulator.SubSystem.CFmesh.Data.ExtraStateVarStrides = 4

# initial field
Simulator.SubSystem.CellCenterFVM.InitComds = InitState
Simulator.SubSystem.CellCenterFVM.InitNames = InField
Simulator.SubSystem.CellCenterFVM.InField.applyTRS = InnerFaces
Simulator.SubSystem.CellCenterFVM.InField.Vars = x y
Simulator.SubSystem.CellCenterFVM.InField.Def = 6880 4244 0 1192

# boundary conditions commands
Simulator.SubSystem.CellCenterFVM.BcComds = NoSlipWallIsothermalNSvtFVMCC MirrorVelocityFVMCC SuperOutletFVMCC SuperInletFVMCC
Simulator.SubSystem.CellCenterFVM.BcNames = Wall Mirror SOutlet SInlet # names IN COOLFluiD

Simulator.SubSystem.CellCenterFVM.Wall.applyTRS          = wall
Simulator.SubSystem.CellCenterFVM.Wall.TWall             = 293
Simulator.SubSystem.CellCenterFVM.Wall.Adiabatic         = false
Simulator.SubSystem.CellCenterFVM.Wall.ZeroGradientFlags = 1 0 0 0

Simulator.SubSystem.CellCenterFVM.Mirror.applyTRS          = symmetry
# second order: impose gradient=0 on the variables for wich the mask array value is "1" 
Simulator.SubSystem.CellCenterFVM.Mirror.ZeroGradientFlags = 1 0 0 1 

Simulator.SubSystem.CellCenterFVM.SInlet.applyTRS = inlet
Simulator.SubSystem.CellCenterFVM.SInlet.Vars = x y
Simulator.SubSystem.CellCenterFVM.SInlet.Def = 6880 4244 0 1192

Simulator.SubSystem.CellCenterFVM.SOutlet.applyTRS = outlet
# second order: impose gradient=0 on the variables for wich the mask array value is "1" 
Simulator.SubSystem.CellCenterFVM.SOutlet.ZeroGradientFlags = 1 1 1 1

